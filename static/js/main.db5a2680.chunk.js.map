{"version":3,"sources":["types.ts","constants.ts","styles.ts","useGame.ts","App.tsx","index.tsx"],"names":["EndGameResult","CROSS","ZERO","Main","styled","div","GameSquare","disabled","GameCell","Cross","Zero","GameRow","HistoryContainer","GameInfoControl","ScoreContainer","ScoreItem","ResetButton","button","END_GAME_STYLE_MAP","Game","None","Horizontal_0","Horizontal_1","Horizontal_2","Vertical_0","Vertical_1","Vertical_2","LeftDiagonal","RightDiagonal","EndGameLine","endGameResult","HistoryTitle","HistoryItem","PosContainer","span","checkEndGame","gameField","x","y","getEmptyCell","index","compX","every","compY","row","lComp","_","rComp","GAME_FIELD_SIZE","createSnapshot","arr","JSON","parse","stringify","calculateMove","currentField","currentMover","layer","map","newField","end","move","newLayer","result","child","treeSearch","tree","init","steps","reduce","xAcc","yAcc","col","useGame","useState","changeField","score","selectedUserMover","currentStep","settings","changeSettings","gameHistory","changeHistory","onMove","useCallback","gameResult","historyItem","mover","message","date","Date","current","concat","prev","newSettings","onMoveMachine","gameTree","min","pos","useEffect","reset","changeSelectedUserMover","newMover","CONTENT_MAP","App","title","onClick","key","Component","toLocaleTimeString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db5a2680.chunk.js","sourcesContent":["export type MoverType = 'X' | 'O';\r\n\r\nexport enum EndGameResult {\r\n  Game,\r\n  None,\r\n\r\n  Horizontal_0,\r\n  Horizontal_1,\r\n  Horizontal_2,\r\n\r\n  Vertical_0,\r\n  Vertical_1,\r\n  Vertical_2,\r\n\r\n  LeftDiagonal,\r\n  RightDiagonal\r\n}\r\n\r\nexport interface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface TreeItem {\r\n  layer: number;\r\n  result: -1 | 0 | 1;\r\n  move: {\r\n    currentMover: MoverType;\r\n  } & Position;\r\n  child: CalculateMoveResult | null;\r\n}\r\n\r\nexport type ResultTreeItem = TreeItem | undefined;\r\n\r\nexport type CalculateMoveResult = ResultTreeItem[][];\r\n\r\nexport type TreeSearchResult = { result: -1 | 0 | 1; steps: number }[][];\r\n\r\nexport interface GameSettingsState {\r\n  selectedUserMover: MoverType;\r\n  currentMover: MoverType;\r\n  score: { X: number; O: number };\r\n  endGameResult: EndGameResult;\r\n  currentStep: number;\r\n}\r\n\r\nexport interface GameHistoryItem extends Position {\r\n  mover: MoverType;\r\n  message?: string;\r\n  date?: Date;\r\n}\r\n\r\nexport type GameField = (MoverType | null)[][];\r\n","import { TreeSearchResult } from './types';\r\n\r\nexport const getEmptyField = () => [\r\n  [null, null, null],\r\n  [null, null, null],\r\n  [null, null, null]\r\n];\r\n\r\nexport const CROSS = 'X';\r\n\r\nexport const ZERO = 'O';\r\n\r\nexport const GAME_FIELD_SIZE = 3;\r\n\r\nexport const createResult = (): TreeSearchResult => [\r\n  [\r\n    { result: 0, steps: 0 },\r\n    { result: 0, steps: 0 },\r\n    { result: 0, steps: 0 }\r\n  ],\r\n  [\r\n    { result: 0, steps: 0 },\r\n    { result: 0, steps: 0 },\r\n    { result: 0, steps: 0 }\r\n  ],\r\n  [\r\n    { result: 0, steps: 0 },\r\n    { result: 0, steps: 0 },\r\n    { result: 0, steps: 0 }\r\n  ]\r\n];\r\n","import styled from 'styled-components';\r\nimport { EndGameResult } from './types';\r\n\r\nexport const Main = styled.div`\r\n  height: 100%;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const GameSquare = styled.div<{ disabled?: boolean }>`\r\n  width: 600px;\r\n  height: 600px;\r\n  margin: auto;\r\n  background: #f7f7f7;\r\n  border-radius: 20px;\r\n  position: relative;\r\n\r\n  ${({ disabled = false }) =>\r\n    disabled &&\r\n    `\r\n        opacity: 0.6;\r\n        pointer-events: none;\r\n  `}\r\n`;\r\n\r\nexport const GameCell = styled.div`\r\n  width: 33.2%;\r\n  cursor: pointer;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Cross = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  ::before,\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 6px;\r\n    background: #545454;\r\n    top: 50%;\r\n  }\r\n\r\n  ::before {\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  ::after {\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\nexport const Zero = styled.div`\r\n  width: 80%;\r\n  height: 80%;\r\n  border: 6px solid #545454;\r\n  border-radius: 100%;\r\n`;\r\n\r\nexport const GameRow = styled.div`\r\n  display: flex;\r\n  height: 33%;\r\n\r\n  :not(:last-of-type) {\r\n    border-bottom: 4px solid turquoise;\r\n  }\r\n\r\n  & > div:not(:last-of-type) {\r\n    border-right: 4px solid turquoise;\r\n  }\r\n`;\r\n\r\nexport const HistoryContainer = styled.div`\r\n  margin-left: 20px;\r\n  min-height: 650px;\r\n  max-height: 650px;\r\n  width: 400px;\r\n  overflow-y: auto;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const GameInfoControl = styled.div`\r\n  margin: 30px 0px;\r\n`;\r\n\r\nexport const ScoreContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ScoreItem = styled.div<{ disabled?: boolean }>`\r\n  width: 120px;\r\n  height: 20px;\r\n  border: 2px solid #545454;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 10px;\r\n  position: relative;\r\n\r\n  ${({ disabled = false }) =>\r\n    disabled ? `pointer-events: none;` : `cursor: pointer;`}\r\n\r\n  &[data-current-mover='true'] {\r\n    border: 2px solid turquoise;\r\n  }\r\n\r\n  & > div:first-of-type {\r\n    color: #545454;\r\n  }\r\n\r\n  & > div:last-of-type {\r\n    color: #919191;\r\n  }\r\n\r\n  &[data-my-side='true'] {\r\n    ::before {\r\n      content: 'Вы';\r\n      position: absolute;\r\n      top: -20px;\r\n      left: 0px;\r\n      text-align: center;\r\n      color: turquoise;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ResetButton = styled.button`\r\n  background: turquoise;\r\n  color: #545454;\r\n  border: none;\r\n  font-size: 14px;\r\n  padding: 4px 10px;\r\n  font-weight: bold;\r\n  border-radius: 10px;\r\n\r\n  :enabled:hover {\r\n    background: #22f1dc;\r\n  }\r\n\r\n  :enabled:active {\r\n    background: #1ad4c1;\r\n  }\r\n\r\n  :enabled {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst END_GAME_STYLE_MAP: { [key: number]: string } = {\r\n  [EndGameResult.Game]: ` display: none; `,\r\n  [EndGameResult.None]: ` display: none; `,\r\n  [EndGameResult.Horizontal_0]: ` \r\n    top: 15%;\r\n    width: 94%;\r\n    left: 3%; \r\n  `,\r\n  [EndGameResult.Horizontal_1]: ` \r\n    top: calc(50% - 3px);\r\n    width: 94%;\r\n    left: 3%; \r\n  `,\r\n  [EndGameResult.Horizontal_2]: ` \r\n    top: calc(85% - 10px);\r\n    width: 94%;\r\n    left: 3%; \r\n   `,\r\n  [EndGameResult.Vertical_0]: `\r\n    transform: rotate(90deg);\r\n    top: calc(50% - 5px);\r\n    width: 94%;\r\n    left: -30%;\r\n  `,\r\n  [EndGameResult.Vertical_1]: `\r\n    transform: rotate(90deg);\r\n    top: calc(50% - 5px);\r\n    width: 94%;\r\n    left: 3%;\r\n  `,\r\n  [EndGameResult.Vertical_2]: `\r\n    transform: rotate(90deg);\r\n    top: calc(50% - 5px);\r\n    width: 94%;\r\n    left: 36%;\r\n  `,\r\n  [EndGameResult.LeftDiagonal]: `\r\n    transform: rotate(45deg);\r\n    top: calc(50% - 5px);\r\n  `,\r\n  [EndGameResult.RightDiagonal]: `\r\n    transform: rotate(-45deg);\r\n    top: calc(50% - 5px);\r\n  `\r\n};\r\n\r\nexport const EndGameLine = styled.div<{ endGameResult: EndGameResult }>`\r\n  background: tomato;\r\n  height: 10px;\r\n  width: 100%;\r\n  position: absolute;\r\n  z-index: 3;\r\n\r\n  ${({ endGameResult }) => END_GAME_STYLE_MAP[endGameResult]}\r\n`;\r\n\r\nexport const HistoryTitle = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const HistoryItem = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const PosContainer = styled.span`\r\n  font-size: 12px;\r\n  color: darkgray;\r\n  margin-right: 10px;\r\n`;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n  createResult,\r\n  CROSS,\r\n  GAME_FIELD_SIZE,\r\n  getEmptyField,\r\n  ZERO\r\n} from './constants';\r\nimport {\r\n  CalculateMoveResult,\r\n  EndGameResult,\r\n  GameField,\r\n  GameHistoryItem,\r\n  GameSettingsState,\r\n  MoverType,\r\n  Position,\r\n  TreeSearchResult\r\n} from './types';\r\n\r\nconst getEmptyCell = (gameField: GameField): Position | null => {\r\n  for (let x = 0; x < GAME_FIELD_SIZE; x++) {\r\n    for (let y = 0; y < GAME_FIELD_SIZE; y++) {\r\n      if (!gameField[x][y]) {\r\n        return { x, y };\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst checkEndGame = (gameField: GameField) => {\r\n  if (getEmptyCell(gameField) === null) {\r\n    return EndGameResult.None;\r\n  }\r\n\r\n  for (let index = 0; index !== GAME_FIELD_SIZE; index++) {\r\n    const compX = gameField[index][0];\r\n    if (compX && gameField[index].every((x) => x === compX)) {\r\n      return EndGameResult.Horizontal_0 + index;\r\n    }\r\n\r\n    const compY = gameField[0][index];\r\n    if (compY && gameField.every((row) => row[index] === compY)) {\r\n      return EndGameResult.Vertical_0 + index;\r\n    }\r\n  }\r\n\r\n  const lComp = gameField[0][0];\r\n  if (\r\n    lComp &&\r\n    gameField.every((_, index) => gameField[index][index] === lComp)\r\n  ) {\r\n    return EndGameResult.LeftDiagonal;\r\n  }\r\n\r\n  const rComp = gameField[GAME_FIELD_SIZE - 1][0];\r\n  if (\r\n    rComp &&\r\n    gameField.every(\r\n      (_, index) => gameField[GAME_FIELD_SIZE - 1 - index][index] === rComp\r\n    )\r\n  ) {\r\n    return EndGameResult.RightDiagonal;\r\n  }\r\n\r\n  return EndGameResult.Game;\r\n};\r\n\r\nconst createSnapshot = (arr: GameField): GameField =>\r\n  JSON.parse(JSON.stringify(arr));\r\n\r\nconst calculateMove = (\r\n  currentField: GameField,\r\n  currentMover: MoverType,\r\n  layer: number = 0\r\n): CalculateMoveResult =>\r\n  currentField.map((row, x) =>\r\n    row.map((_, y) => {\r\n      if (currentField[x][y]) {\r\n        return undefined;\r\n      }\r\n\r\n      const newField = createSnapshot(currentField);\r\n\r\n      newField[x][y] = currentMover;\r\n\r\n      const end = checkEndGame(newField);\r\n      const move = { x, y, currentMover };\r\n      const newLayer = layer + 1;\r\n      if (end !== EndGameResult.Game) {\r\n        return {\r\n          layer: newLayer,\r\n          result: currentMover === ZERO ? 1 : -1,\r\n          move,\r\n          child: null\r\n        };\r\n      }\r\n\r\n      return {\r\n        layer: newLayer,\r\n        result: 0,\r\n        move,\r\n        child: calculateMove(\r\n          newField,\r\n          currentMover === CROSS ? ZERO : CROSS,\r\n          newLayer\r\n        )\r\n      };\r\n    })\r\n  );\r\n\r\nconst treeSearch = (\r\n  tree: CalculateMoveResult,\r\n  init = createResult()\r\n): TreeSearchResult =>\r\n  tree.reduce(\r\n    (xAcc, row, x) =>\r\n      row.reduce((yAcc, col, y) => {\r\n        if (\r\n          col?.result &&\r\n          (yAcc[x][y].steps === 0 || yAcc[x][y].steps >= col.layer)\r\n        ) {\r\n          yAcc[x][y] = {\r\n            result: col.result,\r\n            steps: col.layer\r\n          };\r\n        }\r\n\r\n        if (!col?.child) {\r\n          return yAcc;\r\n        }\r\n\r\n        return treeSearch(col.child, yAcc);\r\n      }, xAcc),\r\n    init\r\n  );\r\n\r\nconst getNextMove = (gameTree: CalculateMoveResult) => {\r\n  const result = treeSearch(gameTree);\r\n\r\n  return result.reduce(\r\n    (xAcc, row, x) =>\r\n      row.reduce(\r\n        (yAcc, col, y) =>\r\n          col.result && col.steps < yAcc.min\r\n            ? { pos: { x, y }, min: col.steps }\r\n            : yAcc,\r\n        xAcc\r\n      ),\r\n    { pos: { x: 0, y: 0 }, min: 100 }\r\n  ).pos;\r\n};\r\n\r\nconst useGame = () => {\r\n  const [gameField, changeField] = useState<GameField>(getEmptyField());\r\n  const [settings, changeSettings] = useState<GameSettingsState>({\r\n    currentMover: CROSS,\r\n    score: { [CROSS]: 0, [ZERO]: 0 },\r\n    selectedUserMover: CROSS,\r\n    endGameResult: EndGameResult.Game,\r\n    currentStep: 0\r\n  });\r\n  const [gameHistory, changeHistory] = useState<GameHistoryItem[]>([]);\r\n  const { currentMover, selectedUserMover } = settings;\r\n\r\n  const onMove = useCallback(\r\n    (x, y) => {\r\n      if (gameField[x][y]) {\r\n        return;\r\n      }\r\n\r\n      const newField = [...gameField];\r\n\r\n      newField[x][y] = currentMover;\r\n\r\n      const gameResult = checkEndGame(newField);\r\n      const historyItem = {\r\n        mover: currentMover,\r\n        x,\r\n        y,\r\n        message:\r\n          gameResult !== EndGameResult.Game\r\n            ? `Игра окончена ${\r\n                gameResult === EndGameResult.None\r\n                  ? 'ничьей'\r\n                  : `победой - ${currentMover}`\r\n              }!`\r\n            : '',\r\n        date: new Date()\r\n      };\r\n\r\n      changeHistory((current) => current.concat(historyItem));\r\n      changeField(newField);\r\n      changeSettings((prev) => {\r\n        const newSettings = { ...prev };\r\n        if (\r\n          gameResult !== EndGameResult.Game &&\r\n          EndGameResult.None !== gameResult\r\n        ) {\r\n          newSettings.score[currentMover]++;\r\n        }\r\n\r\n        newSettings.endGameResult = gameResult;\r\n        newSettings.currentStep++;\r\n        newSettings.currentMover = currentMover === CROSS ? ZERO : CROSS;\r\n\r\n        return newSettings;\r\n      });\r\n    },\r\n    [gameField, changeField, currentMover, changeSettings]\r\n  );\r\n\r\n  const onMoveMachine = useCallback(() => {\r\n    if (currentMover !== selectedUserMover) {\r\n      // Первый ход в центр если тот не занят\r\n      if (!gameField[1][1]) {\r\n        onMove(1, 1);\r\n\r\n        return;\r\n      }\r\n\r\n      const { x, y } = getNextMove(calculateMove(gameField, currentMover));\r\n\r\n      onMove(x, y);\r\n    }\r\n  }, [currentMover, selectedUserMover, gameField, onMove]);\r\n\r\n  useEffect(() => {\r\n    onMoveMachine();\r\n  }, [currentMover]);\r\n\r\n  useEffect(() => {\r\n    if (currentMover !== selectedUserMover) {\r\n      onMoveMachine();\r\n    }\r\n  }, [selectedUserMover]);\r\n\r\n  const reset = useCallback(() => {\r\n    changeField(getEmptyField());\r\n    changeSettings((prev) => ({\r\n      ...prev,\r\n      currentMover: CROSS,\r\n      endGameResult: EndGameResult.Game,\r\n      currentStep: 0\r\n    }));\r\n  }, [changeField, changeSettings]);\r\n\r\n  const changeSelectedUserMover = useCallback(\r\n    (newMover: MoverType) =>\r\n      changeSettings((prev) => ({ ...prev, selectedUserMover: newMover })),\r\n    [changeSettings]\r\n  );\r\n\r\n  return {\r\n    gameField,\r\n    settings,\r\n    onMove,\r\n    changeSelectedUserMover,\r\n    reset,\r\n    gameHistory\r\n  };\r\n};\r\n\r\nexport default useGame;\r\n","import { CROSS, ZERO } from './constants';\nimport {\n  Cross,\n  EndGameLine,\n  GameCell,\n  GameInfoControl,\n  GameRow,\n  GameSquare,\n  HistoryContainer,\n  HistoryItem,\n  HistoryTitle,\n  Main,\n  PosContainer,\n  ResetButton,\n  ScoreContainer,\n  ScoreItem,\n  Zero\n} from './styles';\nimport { EndGameResult } from './types';\nimport useGame from './useGame';\n\nconst CONTENT_MAP = {\n  [CROSS]: Cross,\n  [ZERO]: Zero\n};\n\nconst App = () => {\n  const {\n    gameField,\n    onMove,\n    settings,\n    reset,\n    gameHistory,\n    changeSelectedUserMover\n  } = useGame();\n  const { currentMover, selectedUserMover, score, endGameResult, currentStep } =\n    settings;\n\n  return (\n    <Main>\n      <div>\n        <GameInfoControl>\n          <ScoreContainer>\n            <ScoreItem\n              disabled={currentStep > 0}\n              data-current-mover={currentMover === CROSS}\n              data-my-side={selectedUserMover === CROSS}\n              title={`Играть за ${CROSS}`}\n              onClick={() => changeSelectedUserMover(CROSS)}\n            >\n              <div>{CROSS}</div>\n              <div>{score[CROSS]}</div>\n            </ScoreItem>\n            <div>\n              <ResetButton onClick={reset}>&#8635; начать заново</ResetButton>\n            </div>\n            <ScoreItem\n              disabled={currentStep > 0}\n              data-current-mover={currentMover === ZERO}\n              data-my-side={selectedUserMover === ZERO}\n              title={`Играть за ${ZERO}`}\n              onClick={() => changeSelectedUserMover(ZERO)}\n            >\n              <div>{ZERO}</div>\n              <div>{score[ZERO]}</div>\n            </ScoreItem>\n          </ScoreContainer>\n        </GameInfoControl>\n        <div>\n          <GameSquare disabled={endGameResult !== EndGameResult.Game}>\n            <EndGameLine endGameResult={endGameResult} />\n            {gameField.map((row, x) => (\n              <GameRow key={`row_${x}`}>\n                {row.map((col, y) => {\n                  const key = `${x}_${y}`;\n                  if (!col) {\n                    return <GameCell key={key} onClick={() => onMove(x, y)} />;\n                  }\n\n                  const Component = CONTENT_MAP[col];\n\n                  return (\n                    <GameCell key={key}>\n                      <Component />\n                    </GameCell>\n                  );\n                })}\n              </GameRow>\n            ))}\n          </GameSquare>\n        </div>\n      </div>\n      <HistoryContainer>\n        <HistoryTitle>История:</HistoryTitle>\n        {gameHistory.map(({ mover, x, y, message, date }) => (\n          <HistoryItem key={`h_${x}_${y}`}>\n            <PosContainer>\n              ({date?.toLocaleTimeString()}) {mover}: [{x}, {y}]\n            </PosContainer>\n            {message && <span>{message}</span>}\n          </HistoryItem>\n        ))}\n      </HistoryContainer>\n    </Main>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}